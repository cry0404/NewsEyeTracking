// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"
)

type Querier interface {
	// 创建一个新的会话，相当于打开了一篇新的网页，开启了新的事件
	// 初始的 endtime 应该是为空的, oss 存储路径应该暂定, 这里的 starttime 应该是有的
	// 但是 endtime 应该是待定的，由前端发回来的信息， sessionid 作为打包区分，
	// 一个 user_id 的内容
	CreateSession(ctx context.Context, arg CreateSessionParams) (ReadingSession, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	// 获取文章的详细信息， 这里需要根据文章的id来获取
	GetArticleByID(ctx context.Context, id int32) (GetArticleByIDRow, error)
	// 获取新的文章， 这里需要根据推荐算法，所以这里筛选出来的接口还应该需要接到推荐算法上
	GetNewArticles(ctx context.Context, arg GetNewArticlesParams) ([]FeedItem, error)
	// 根据邀请码关联用户来查询对应的 recommend 和 information 状态
	GetUserABtestInformation(ctx context.Context, id int32) (GetUserABtestInformationRow, error)
	// 更新会话的结束时间， 这里应该根据 sessionid 来更新,前端发送过来
	UpdateSessionEndTime(ctx context.Context, arg UpdateSessionEndTimeParams) (ReadingSession, error)
	// 这里对应的应该是注册时的
	// 通过传入的第一个参数来更新返回对应的 user 信息
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
